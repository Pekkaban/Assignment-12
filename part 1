<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Task Management App</title>
    <style>
        body {
            font-family: 'Arial', sans-serif;
            margin: 20px;
        }

        #app {
            max-width: 600px;
            margin: 0 auto;
        }

        h1, h2 {
            color: #333;
        }

        form {
            margin-bottom: 20px;
        }

        label {
            display: block;
            margin-bottom: 5px;
        }

        input[type="text"], input[type="checkbox"] {
            margin-bottom: 10px;
        }

        ul {
            list-style: none;
            padding: 0;
        }

        li {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 10px;
            border: 1px solid #ddd;
            margin-bottom: 5px;
            background-color: #fff;
        }

        li.completed {
            background-color: #e6f7e6;
            text-decoration: line-through;
        }

        button {
            background-color: #4caf50;
            color: #fff;
            border: none;
            padding: 10px 15px;
            cursor: pointer;
        }

        button:hover {
            background-color: #45a049;
        }

        p {
            margin: 10px 0;
        }
    </style>
</head>
<body>

<div id="app">
    <h1>Task Management App</h1>

    <form @submit.prevent="addTask">
        <label for="taskTitle">Task Title:</label>
        <input type="text" id="taskTitle" v-model="newTask.title" required>

        <label for="taskStatus">Completion Status:</label>
        <input type="checkbox" id="taskStatus" v-model="newTask.completed">

        <button type="submit">Add Task</button>
    </form>

    <div>
        <h2>Incomplete Tasks</h2>
        <ul>
            <li v-for="task in incompleteTasks" :key="task.id" :class="{ completed: task.completed }">
                <span>{{ task.title }}</span>
                <input type="checkbox" v-model="task.completed" @change="toggleTaskCompletion(task)">
            </li>
        </ul>
    </div>

    <div>
        <h2>Completed Tasks</h2>
        <ul>
            <li v-for="task in completedTasks" :key="task.id" :class="{ completed: task.completed }">
                <span>{{ task.title }}</span>
                <input type="checkbox" v-model="task.completed" @change="toggleTaskCompletion(task)">
            </li>
        </ul>
    </div>

    <div>
        <p>Total Incomplete Tasks: {{ totalIncompleteTasks }}</p>
        <p>Total Completed Tasks: {{ totalCompletedTasks }}</p>
    </div>
</div>

<script src="https://cdn.jsdelivr.net/npm/vue@2"></script>
<script>
    new Vue({
        el: '#app',
        data: {
            tasks: [
                { id: 1, title: 'Task 1', completed: false },
                { id: 2, title: 'Task 2', completed: true },
            ],
            newTask: { title: '', completed: false },
        },
        computed: {
            incompleteTasks() {
                return this.tasks.filter(task => !task.completed);
            },
            completedTasks() {
                return this.tasks.filter(task => task.completed);
            },
            totalIncompleteTasks() {
                return this.incompleteTasks.length;
            },
            totalCompletedTasks() {
                return this.completedTasks.length;
            },
        },
        methods: {
            addTask() {
                this.tasks.push({
                    id: this.tasks.length + 1,
                    title: this.newTask.title,
                    completed: this.newTask.completed,
                });
                this.newTask.title = '';
                this.newTask.completed = false;
            },
            toggleTaskCompletion(task) {
                console.log(`Task "${task.title}" completion status changed to ${task.completed ? 'completed' : 'incomplete'}.`);
            },
        },
        watch: {
            tasks: {
                handler(newValue, oldValue) {
                    console.log('Task list modified:', newValue);
                },
                deep: true,
            },
        },
        created() {
            console.log('Task Management App created.');
        },
    });
</script>

</body>
</html>
